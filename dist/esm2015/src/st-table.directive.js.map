{"version":3,"file":"st-table.directive.js","sourceRoot":"","sources":["../package/src/st-table.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,SAAS,EAAE,MAAM,EAAE,YAAY,EAAoB,MAAM,eAAe,CAAC;AACjF,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;;;;;;;AAejD,0BAAwD,KAAwB;IAC5E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACzB;;;;;;;AAED,6BAA2D,KAAyB;IAChF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC5B;;;;;;;AAED,4BAA0D,KAA0B;IAChF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC3B;;;;;;;AAED,2BAAyD,KAAyB;IAC9E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC1B;;;;;;;AAED,0BAAwD,KAAuB;IAC3E,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;IAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CACzB;;;;AAOD,MAAM;;;;IAeF,YAAoB,KAAoB;QAApB,UAAK,GAAL,KAAK,CAAe;qBAdZ,EAAE;oBACvB,KAAK;uBAOQ,IAAI,YAAY,EAAsB;oBACzC,IAAI,YAAY,EAAqB;sBACnC,IAAI,YAAY,EAAuB;qBACxC,IAAI,YAAY,EAAsB;oBACvC,IAAI,YAAY,EAAoB;KAGpD;;;;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,EAAE,kCAAuB,IAAI,CAAC,WAAW,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,EAAE,wCAA0B,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,CAAC,EAAE,mCAAwB,IAAI,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,EAAE,oCAAwB,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;;;;IAED,WAAW;QACP,IAAI,CAAC,KAAK,CAAC,GAAG,0CAA2B,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,GAAG,kCAAuB,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,GAAG,wCAA0B,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,GAAG,mCAAwB,IAAI,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,KAAK,CAAC,GAAG,oCAAwB,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3D;;;YA1CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,SAAS;aACtB;;;;YAzCO,UAAU;;;wBAmDb,MAAM;qBACN,MAAM;uBACN,MAAM;sBACN,MAAM;qBACN,MAAM","sourcesContent":["import {Directive, Output, EventEmitter, OnInit, OnDestroy} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {\n    SortConfiguration,\n    DisplayedItem,\n    FilterConfiguration,\n    SliceConfiguration,\n    WorkingIndicator,\n    SmartTableEvents as StEvents,\n    DisplayChangeCallback,\n    SortChangeCallback,\n    FilterChangeCallback,\n    PageChangeCallback,\n    WorkingIndicatorChangeCallback\n} from 'smart-table-core';\n\nfunction handleSortChange<T>(this: StTableDirective<T>, state: SortConfiguration) {\n    this.sort.emit(state);\n}\n\nfunction handleDisplayChange<T>(this: StTableDirective<T>, items: DisplayedItem<T>[]) {\n    this.items = items;\n    this.display.emit(items);\n}\n\nfunction handleFilterChange<T>(this: StTableDirective<T>, state: FilterConfiguration) {\n    this.filter.emit(state);\n}\n\nfunction handleSliceChange<T>(this: StTableDirective<T>, state: SliceConfiguration) {\n    this.slice.emit(state);\n}\n\nfunction handleExecChange<T>(this: StTableDirective<T>, state: WorkingIndicator) {\n    this.busy = state.working;\n    this.exec.emit(state);\n}\n\n\n@Directive({\n    selector: '[stTable]',\n    exportAs: 'stTable'\n})\nexport class StTableDirective<T> implements OnInit, OnDestroy {\n    items: DisplayedItem<T>[] = [];\n    busy = false;\n    private displayHandler: DisplayChangeCallback<T>;\n    private sortHandler: SortChangeCallback;\n    private filterHandler: FilterChangeCallback;\n    private sliceHandler: PageChangeCallback;\n    private execHandler: WorkingIndicatorChangeCallback;\n\n    @Output() display = new EventEmitter<DisplayedItem<T>[]>();\n    @Output() sort = new EventEmitter<SortConfiguration>();\n    @Output() filter = new EventEmitter<FilterConfiguration>();\n    @Output() slice = new EventEmitter<SliceConfiguration>();\n    @Output() exec = new EventEmitter<WorkingIndicator>();\n\n    constructor(private table: SmartTable<T>) {\n    }\n\n    ngOnInit() {\n        this.displayHandler = handleDisplayChange.bind(this);\n        this.sortHandler = handleSortChange.bind(this);\n        this.filterHandler = handleFilterChange.bind(this);\n        this.sliceHandler = handleSliceChange.bind(this);\n        this.execHandler = handleExecChange.bind(this);\n        this.table.onDisplayChange(this.displayHandler);\n        this.table.on(StEvents.TOGGLE_SORT, this.sortHandler);\n        this.table.on(StEvents.FILTER_CHANGED, this.filterHandler);\n        this.table.on(StEvents.PAGE_CHANGED, this.sliceHandler);\n        this.table.on(StEvents.EXEC_CHANGED, this.execHandler);\n        this.table.init();\n    }\n\n    ngOnDestroy() {\n        this.table.off(StEvents.DISPLAY_CHANGED, this.displayHandler);\n        this.table.off(StEvents.TOGGLE_SORT, this.sortHandler);\n        this.table.off(StEvents.FILTER_CHANGED, this.filterHandler);\n        this.table.off(StEvents.PAGE_CHANGED, this.sliceHandler);\n        this.table.off(StEvents.EXEC_CHANGED, this.execHandler);\n    }\n}\n"]}