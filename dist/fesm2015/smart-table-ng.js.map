{"version":3,"file":"smart-table-ng.js","sources":["../package/src/smart-table.service.ts","../package/src/st-sort.directive.ts","../package/src/st-filter.directive.ts","../package/src/st-search.directive.ts","../package/src/st-pagination.directive.ts","../package/src/st-table.directive.ts","../package/src/table-state.ts","../package/src/smart-table.module.ts","../package/src/factories.ts"],"sourcesContent":["import {Injectable, OnDestroy} from '@angular/core';\nimport {\n    SmartTable as ISmartTable, DisplayedItem, ProcessingOptions, FilterConfiguration, DisplayChangeCallback,\n    SearchConfiguration,\n    SliceConfiguration,\n    SortConfiguration,\n    TableState\n} from 'smart-table-core';\n\n@Injectable()\nexport abstract class SmartTable<T> implements ISmartTable<T>, OnDestroy {\n    dispatch: (event: string, ...args: any[]) => ISmartTable<T>;\n    eval: (state?: TableState) => Promise<DisplayedItem<T>[]>;\n    exec: (processInput?: ProcessingOptions) => void;\n    filter: (filterClause: FilterConfiguration) => void;\n    getMatchingItems: () => T[];\n    getTableState: () => TableState;\n    init: () => void;\n    off: (event: string, ...listeners: Function[]) => ISmartTable<T>;\n    on: (event: string, ...listeners: Function[]) => ISmartTable<T>;\n    onDisplayChange: (callback: DisplayChangeCallback<T>) => void;\n    search: (searchState: SearchConfiguration) => void;\n    slice: (sliceState: SliceConfiguration) => void;\n    sort: (sortState: SortConfiguration) => void;\n    use: (data: T[], newTableState ?: TableState) => void;\n    ngOnDestroy: () => void;\n    filteredCount: number;\n    length: number;\n}\n","import {Directive, Input, HostBinding, HostListener, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {sortDirective as sort, SortDirection, SortConfiguration} from 'smart-table-core';\n\n\n@Directive({\n    selector: '[stSort]',\n    exportAs: 'stSort'\n})\nexport class StSortDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n\n    currentSortDirection: SortDirection = SortDirection.NONE;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stDebounceTime') delay = 0;\n\n    @Input('stSort') pointer: string;\n\n    @Input('stSortCycle') cycle: boolean | string = false;\n\n    @HostBinding('class.st-sort-asc') get isAsc() {\n        return this.currentSortDirection === SortDirection.ASC;\n    }\n\n    @HostBinding('class.st-sort-desc') get isDesc() {\n        return this.currentSortDirection === SortDirection.DESC;\n    }\n\n    @HostListener('click') toggle(): void {\n        this._directive.toggle();\n    }\n\n    ngOnInit() {\n        this._directive = sort({\n            table: this.table, pointer: this.pointer, cycle: this.cycle === true || this.cycle === 'true',\n            debounceTime: this.delay\n        });\n        this._directive.onSortToggle(({direction, pointer}: SortConfiguration) => {\n            this.currentSortDirection = pointer === this.pointer ? <SortDirection>direction : SortDirection.NONE;\n        });\n        const initState = this._directive.state();\n        this.currentSortDirection = initState.pointer === this.pointer ? (initState.direction || SortDirection.ASC) : SortDirection.NONE;\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n    }\n}\n","import {Directive, Input, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {filterDirective as filter, FilterOperator, FilterType} from 'smart-table-core';\nimport {fromEvent, Subscription} from 'rxjs/index';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Directive({\n    selector: '[stFilter]',\n    exportAs: 'stFilter'\n})\nexport class StFilterDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n    private _inputSubscription: Subscription;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stFilter') pointer: string;\n\n    @Input('stFilterOperator') operator = FilterOperator.INCLUDES;\n\n    @Input('stFilterType') type = FilterType.STRING;\n\n    @Input('stDebounceTime') delay = 300;\n\n    filter(value: string): void {\n        return this._directive.filter(value);\n    }\n\n    ngOnInit() {\n        this._directive = filter({\n            pointer: this.pointer,\n            table: this.table,\n            operator: this.operator,\n            type: this.type\n        });\n\n        // fix for Edge https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n        const event = this._el.nativeElement.tagName === 'SELECT' ? 'change' : 'input';\n\n        this._inputSubscription = fromEvent(this._el.nativeElement, event)\n            .pipe(\n                map(($event: any) => (<HTMLInputElement>$event.target).value),\n                debounceTime(this.delay),\n                distinctUntilChanged(),\n            )\n            .subscribe(v => this.filter(v));\n\n        const state = this._directive.state();\n\n        if (Array.isArray(state[this.pointer])) {\n            this._el.nativeElement.value = state[this.pointer][0].value;\n        }\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n        this._inputSubscription.unsubscribe();\n    }\n}\n","import {Directive, Input, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {searchDirective as search} from 'smart-table-core';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport {Subscription, fromEvent} from 'rxjs/index';\n\n@Directive({\n    selector: '[stSearch]',\n    exportAs: 'stSearch'\n})\nexport class StSearchDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n    private _inputSubscription: Subscription;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stSearch') scope: string | string[];\n\n    @Input('stDebounceTime') delay = 300;\n\n    @Input('stSearchFlags') flags = 'i';\n\n    @Input('stSearchEscape') escape: boolean | string = false;\n\n    search(value: string): void {\n        return this._directive.search(value, {\n            flags: this.flags,\n            escape: this.escape === 'true' || this.escape === true\n        });\n    }\n\n    ngOnInit() {\n        const scope = Array.isArray(this.scope) ? this.scope :\n            this.scope.split(',').map(p => p.trim());\n        this._directive = search({scope, table: this.table});\n        const {value} = this._directive.state();\n        this._el.nativeElement.value = value || '';\n        this._inputSubscription = fromEvent(this._el.nativeElement, 'input')\n            .pipe(\n                map($event => (<HTMLInputElement>(<KeyboardEvent>$event).target).value),\n                debounceTime(this.delay),\n                distinctUntilChanged(),\n            )\n            .subscribe((v: string) => this.search(v));\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n        this._inputSubscription.unsubscribe();\n    }\n}\n","import {Directive, OnInit, OnDestroy} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {paginationDirective as slice} from 'smart-table-core';\n\ninterface SummaryOutput {\n    page: number;\n    size: number;\n    filteredCount: number;\n}\n\n@Directive({\n    selector: '[stPagination]',\n    exportAs: 'stPagination'\n})\nexport class StPaginationDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n\n    page = 1;\n    size = 20;\n    length: number;\n\n    constructor(private table: SmartTable<T>) {\n    }\n\n    ngOnInit() {\n        this._directive = slice({table: this.table});\n        this._directive.onSummaryChange(({page, size, filteredCount}: SummaryOutput) => {\n            let goToOne = false;\n            this.page = page;\n            // Il faut retourner sur la première page au besoin\n            if ((this.size !== size || this.length !== filteredCount) && this.page > 1) {\n                goToOne = true;\n            }\n            this.size = size;\n            this.length = filteredCount;\n            if (goToOne) {\n                this.selectPage(1);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n    }\n\n    get lowerBoundIndex(): number {\n        return (this.page - 1) * this.size;\n    }\n\n    get higherBoundIndex(): number {\n        return Math.min(this.page * this.size - 1, this.length - 1);\n    }\n\n    get pageCount(): number {\n        return this.size ? Math.ceil(this.length / this.size) : 1;\n    }\n\n    get pages(): number[] {\n        return Array.from({ length: this.pageCount }, (v, k) => k + 1);\n    }\n\n    selectPage(p: number): void {\n        return this._directive.selectPage(+(p));\n    }\n\n    selectNextPage(): void {\n        return this._directive.selectNextPage();\n    }\n\n    selectPreviousPage(): void {\n        return this._directive.selectPreviousPage();\n    }\n\n    changePageSize(size: number): void {\n        // Force number cast;\n        return this._directive.changePageSize(+(size));\n    }\n\n    isPreviousPageEnabled(): boolean {\n        return this._directive.isPreviousPageEnabled();\n    }\n\n    isNextPageEnabled(): boolean {\n        return this._directive.isNextPageEnabled();\n    }\n}\n","import {Directive, Output, EventEmitter, OnInit, OnDestroy} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {\n    SortConfiguration,\n    DisplayedItem,\n    FilterConfiguration,\n    SliceConfiguration,\n    WorkingIndicator,\n    SmartTableEvents as StEvents,\n    DisplayChangeCallback,\n    SortChangeCallback,\n    FilterChangeCallback,\n    PageChangeCallback,\n    WorkingIndicatorChangeCallback\n} from 'smart-table-core';\n\nfunction handleSortChange<T>(this: StTableDirective<T>, state: SortConfiguration) {\n    this.sort.emit(state);\n}\n\nfunction handleDisplayChange<T>(this: StTableDirective<T>, items: DisplayedItem<T>[]) {\n    this.items = items;\n    this.display.emit(items);\n}\n\nfunction handleFilterChange<T>(this: StTableDirective<T>, state: FilterConfiguration) {\n    this.filter.emit(state);\n}\n\nfunction handleSliceChange<T>(this: StTableDirective<T>, state: SliceConfiguration) {\n    this.slice.emit(state);\n}\n\nfunction handleExecChange<T>(this: StTableDirective<T>, state: WorkingIndicator) {\n    this.busy = state.working;\n    this.exec.emit(state);\n}\n\n\n@Directive({\n    selector: '[stTable]',\n    exportAs: 'stTable'\n})\nexport class StTableDirective<T> implements OnInit, OnDestroy {\n    items: DisplayedItem<T>[] = [];\n    busy = false;\n    private displayHandler: DisplayChangeCallback<T>;\n    private sortHandler: SortChangeCallback;\n    private filterHandler: FilterChangeCallback;\n    private sliceHandler: PageChangeCallback;\n    private execHandler: WorkingIndicatorChangeCallback;\n\n    @Output() display = new EventEmitter<DisplayedItem<T>[]>();\n    @Output() sort = new EventEmitter<SortConfiguration>();\n    @Output() filter = new EventEmitter<FilterConfiguration>();\n    @Output() slice = new EventEmitter<SliceConfiguration>();\n    @Output() exec = new EventEmitter<WorkingIndicator>();\n\n    constructor(private table: SmartTable<T>) {\n    }\n\n    ngOnInit() {\n        this.displayHandler = handleDisplayChange.bind(this);\n        this.sortHandler = handleSortChange.bind(this);\n        this.filterHandler = handleFilterChange.bind(this);\n        this.sliceHandler = handleSliceChange.bind(this);\n        this.execHandler = handleExecChange.bind(this);\n        this.table.onDisplayChange(this.displayHandler);\n        this.table.on(StEvents.TOGGLE_SORT, this.sortHandler);\n        this.table.on(StEvents.FILTER_CHANGED, this.filterHandler);\n        this.table.on(StEvents.PAGE_CHANGED, this.sliceHandler);\n        this.table.on(StEvents.EXEC_CHANGED, this.execHandler);\n        this.table.init();\n    }\n\n    ngOnDestroy() {\n        this.table.off(StEvents.DISPLAY_CHANGED, this.displayHandler);\n        this.table.off(StEvents.TOGGLE_SORT, this.sortHandler);\n        this.table.off(StEvents.FILTER_CHANGED, this.filterHandler);\n        this.table.off(StEvents.PAGE_CHANGED, this.sliceHandler);\n        this.table.off(StEvents.EXEC_CHANGED, this.execHandler);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {TableState as ITableState} from 'smart-table-core';\n\n@Injectable()\nexport class TableState implements ITableState {\n    filter = {};\n    search = {};\n    slice = {};\n    sort = {};\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StSortDirective} from './st-sort.directive';\nimport {StFilterDirective} from './st-filter.directive';\nimport {StSearchDirective} from './st-search.directive';\nimport {StPaginationDirective} from './st-pagination.directive';\nimport {StTableDirective} from './st-table.directive';\nimport {TableState} from './table-state';\n\n@NgModule({\n    declarations: [\n        StSortDirective,\n        StFilterDirective,\n        StSearchDirective,\n        StPaginationDirective,\n        StTableDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        StPaginationDirective,\n        StSortDirective,\n        StFilterDirective,\n        StSearchDirective,\n        StTableDirective\n    ],\n    providers: []\n})\nexport class SmartTableModule {\n    static forRoot(): ModuleWithProviders {\n        return {ngModule: SmartTableModule, providers: [TableState]};\n    }\n}\n","import {TableState} from './table-state';\nimport {SmartTable} from './smart-table.service';\nimport {\n    smartTable as stTable,\n    SmartTableEvents as StEvents,\n    SmartTableExtension,\n    SmartTable as ISmartTable\n} from 'smart-table-core';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport {ObservableInput, of as observableOf, from as observableFrom} from 'rxjs/index';\n\nexport const from = <T>(data: ObservableInput<T[]>,\n                        tableState = new TableState(),\n                        ...extensions: SmartTableExtension<T>[]): SmartTable<T> => {\n    const dataArray: T[] = [];\n    const table: ISmartTable<T> = stTable({data: dataArray, tableState}, ...extensions);\n    let source = observableFrom(data);\n    let subscription: Subscription;\n\n    return <SmartTable<T>>Object.assign(table, {\n        init() {\n            if (subscription) {\n                subscription.unsubscribe();\n            }\n            table.dispatch(StEvents.EXEC_CHANGED, {working: true});\n            subscription = source\n                .subscribe((items: T[]) => {\n                    dataArray.splice(0, dataArray.length, ...items);\n                    table.exec();\n                });\n        },\n        use(newData: T[], newTableState?: TableState) {\n            subscription.unsubscribe();\n            if (newTableState) {\n                Object.assign(tableState, newTableState);\n            }\n            source = observableOf(newData);\n            table.dispatch(StEvents.EXEC_CHANGED, {working: true});\n            subscription = source\n                .subscribe((values: T[]) => {\n                    dataArray.splice(0, dataArray.length, ...values);\n                    table.exec();\n                });\n        },\n        ngOnDestroy() {\n            subscription.unsubscribe();\n        }\n    });\n};\n\nexport const of = <T>(data: T[], tableState = new TableState(), ...extensions: SmartTableExtension<T>[]): SmartTable<T> =>\n    from(observableOf(data), tableState, ...extensions);\n"],"names":["sort","filter","search","slice","from","stTable","observableFrom","observableOf","of"],"mappings":"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"}