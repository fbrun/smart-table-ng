{"version":3,"file":"smart-table-ng.umd.js","sources":["../package/src/smart-table.service.ts","../package/src/st-sort.directive.ts","../package/src/st-filter.directive.ts","../package/src/st-search.directive.ts","../package/src/st-pagination.directive.ts","../package/src/st-table.directive.ts","../package/src/table-state.ts","../package/src/smart-table.module.ts","../package/src/factories.ts"],"sourcesContent":["import {Injectable, OnDestroy} from '@angular/core';\nimport {\n    SmartTable as ISmartTable, DisplayedItem, ProcessingOptions, FilterConfiguration, DisplayChangeCallback,\n    SearchConfiguration,\n    SliceConfiguration,\n    SortConfiguration,\n    TableState\n} from 'smart-table-core';\n\n@Injectable()\nexport abstract class SmartTable<T> implements ISmartTable<T>, OnDestroy {\n    dispatch: (event: string, ...args: any[]) => ISmartTable<T>;\n    eval: (state?: TableState) => Promise<DisplayedItem<T>[]>;\n    exec: (processInput?: ProcessingOptions) => void;\n    filter: (filterClause: FilterConfiguration) => void;\n    getMatchingItems: () => T[];\n    getTableState: () => TableState;\n    init: () => void;\n    off: (event: string, ...listeners: Function[]) => ISmartTable<T>;\n    on: (event: string, ...listeners: Function[]) => ISmartTable<T>;\n    onDisplayChange: (callback: DisplayChangeCallback<T>) => void;\n    search: (searchState: SearchConfiguration) => void;\n    slice: (sliceState: SliceConfiguration) => void;\n    sort: (sortState: SortConfiguration) => void;\n    use: (data: T[], newTableState ?: TableState) => void;\n    ngOnDestroy: () => void;\n    filteredCount: number;\n    length: number;\n}\n","import {Directive, Input, HostBinding, HostListener, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {sortDirective as sort, SortDirection, SortConfiguration} from 'smart-table-core';\n\n\n@Directive({\n    selector: '[stSort]',\n    exportAs: 'stSort'\n})\nexport class StSortDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n\n    currentSortDirection: SortDirection = SortDirection.NONE;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stDebounceTime') delay = 0;\n\n    @Input('stSort') pointer: string;\n\n    @Input('stSortCycle') cycle: boolean | string = false;\n\n    @HostBinding('class.st-sort-asc') get isAsc() {\n        return this.currentSortDirection === SortDirection.ASC;\n    }\n\n    @HostBinding('class.st-sort-desc') get isDesc() {\n        return this.currentSortDirection === SortDirection.DESC;\n    }\n\n    @HostListener('click') toggle(): void {\n        this._directive.toggle();\n    }\n\n    ngOnInit() {\n        this._directive = sort({\n            table: this.table, pointer: this.pointer, cycle: this.cycle === true || this.cycle === 'true',\n            debounceTime: this.delay\n        });\n        this._directive.onSortToggle(({direction, pointer}: SortConfiguration) => {\n            this.currentSortDirection = pointer === this.pointer ? <SortDirection>direction : SortDirection.NONE;\n        });\n        const initState = this._directive.state();\n        this.currentSortDirection = initState.pointer === this.pointer ? (initState.direction || SortDirection.ASC) : SortDirection.NONE;\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n    }\n}\n","import {Directive, Input, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {filterDirective as filter, FilterOperator, FilterType} from 'smart-table-core';\nimport {fromEvent, Subscription} from 'rxjs/index';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Directive({\n    selector: '[stFilter]',\n    exportAs: 'stFilter'\n})\nexport class StFilterDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n    private _inputSubscription: Subscription;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stFilter') pointer: string;\n\n    @Input('stFilterOperator') operator = FilterOperator.INCLUDES;\n\n    @Input('stFilterType') type = FilterType.STRING;\n\n    @Input('stDebounceTime') delay = 300;\n\n    filter(value: string): void {\n        return this._directive.filter(value);\n    }\n\n    ngOnInit() {\n        this._directive = filter({\n            pointer: this.pointer,\n            table: this.table,\n            operator: this.operator,\n            type: this.type\n        });\n\n        // fix for Edge https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n        const event = this._el.nativeElement.tagName === 'SELECT' ? 'change' : 'input';\n\n        this._inputSubscription = fromEvent(this._el.nativeElement, event)\n            .pipe(\n                map(($event: any) => (<HTMLInputElement>$event.target).value),\n                debounceTime(this.delay),\n                distinctUntilChanged(),\n            )\n            .subscribe(v => this.filter(v));\n\n        const state = this._directive.state();\n\n        if (Array.isArray(state[this.pointer])) {\n            this._el.nativeElement.value = state[this.pointer][0].value;\n        }\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n        this._inputSubscription.unsubscribe();\n    }\n}\n","import {Directive, Input, OnInit, OnDestroy, ElementRef} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {searchDirective as search} from 'smart-table-core';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport {Subscription, fromEvent} from 'rxjs/index';\n\n@Directive({\n    selector: '[stSearch]',\n    exportAs: 'stSearch'\n})\nexport class StSearchDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n    private _inputSubscription: Subscription;\n\n    constructor(private table: SmartTable<T>, private _el: ElementRef) {\n    }\n\n    @Input('stSearch') scope: string | string[];\n\n    @Input('stDebounceTime') delay = 300;\n\n    @Input('stSearchFlags') flags = 'i';\n\n    @Input('stSearchEscape') escape: boolean | string = false;\n\n    search(value: string): void {\n        return this._directive.search(value, {\n            flags: this.flags,\n            escape: this.escape === 'true' || this.escape === true\n        });\n    }\n\n    ngOnInit() {\n        const scope = Array.isArray(this.scope) ? this.scope :\n            this.scope.split(',').map(p => p.trim());\n        this._directive = search({scope, table: this.table});\n        const {value} = this._directive.state();\n        this._el.nativeElement.value = value || '';\n        this._inputSubscription = fromEvent(this._el.nativeElement, 'input')\n            .pipe(\n                map($event => (<HTMLInputElement>(<KeyboardEvent>$event).target).value),\n                debounceTime(this.delay),\n                distinctUntilChanged(),\n            )\n            .subscribe((v: string) => this.search(v));\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n        this._inputSubscription.unsubscribe();\n    }\n}\n","import {Directive, OnInit, OnDestroy} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {paginationDirective as slice} from 'smart-table-core';\n\ninterface SummaryOutput {\n    page: number;\n    size: number;\n    filteredCount: number;\n}\n\n@Directive({\n    selector: '[stPagination]',\n    exportAs: 'stPagination'\n})\nexport class StPaginationDirective<T> implements OnInit, OnDestroy {\n    private _directive: any;\n\n    page = 1;\n    size = 20;\n    length: number;\n\n    constructor(private table: SmartTable<T>) {\n    }\n\n    ngOnInit() {\n        this._directive = slice({table: this.table});\n        this._directive.onSummaryChange(({page, size, filteredCount}: SummaryOutput) => {\n            let goToOne = false;\n            this.page = page;\n            // Il faut retourner sur la première page au besoin\n            if ((this.size !== size || this.length !== filteredCount) && this.page > 1) {\n                goToOne = true;\n            }\n            this.size = size;\n            this.length = filteredCount;\n            if (goToOne) {\n                this.selectPage(1);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this._directive.off();\n    }\n\n    get lowerBoundIndex(): number {\n        return (this.page - 1) * this.size;\n    }\n\n    get higherBoundIndex(): number {\n        return Math.min(this.page * this.size - 1, this.length - 1);\n    }\n\n    get pageCount(): number {\n        return this.size ? Math.ceil(this.length / this.size) : 1;\n    }\n\n    get pages(): number[] {\n        return Array.from({ length: this.pageCount }, (v, k) => k + 1);\n    }\n\n    selectPage(p: number): void {\n        return this._directive.selectPage(+(p));\n    }\n\n    selectNextPage(): void {\n        return this._directive.selectNextPage();\n    }\n\n    selectPreviousPage(): void {\n        return this._directive.selectPreviousPage();\n    }\n\n    changePageSize(size: number): void {\n        // Force number cast;\n        return this._directive.changePageSize(+(size));\n    }\n\n    isPreviousPageEnabled(): boolean {\n        return this._directive.isPreviousPageEnabled();\n    }\n\n    isNextPageEnabled(): boolean {\n        return this._directive.isNextPageEnabled();\n    }\n}\n","import {Directive, Output, EventEmitter, OnInit, OnDestroy} from '@angular/core';\nimport {SmartTable} from './smart-table.service';\nimport {\n    SortConfiguration,\n    DisplayedItem,\n    FilterConfiguration,\n    SliceConfiguration,\n    WorkingIndicator,\n    SmartTableEvents as StEvents,\n    DisplayChangeCallback,\n    SortChangeCallback,\n    FilterChangeCallback,\n    PageChangeCallback,\n    WorkingIndicatorChangeCallback\n} from 'smart-table-core';\n\nfunction handleSortChange<T>(this: StTableDirective<T>, state: SortConfiguration) {\n    this.sort.emit(state);\n}\n\nfunction handleDisplayChange<T>(this: StTableDirective<T>, items: DisplayedItem<T>[]) {\n    this.items = items;\n    this.display.emit(items);\n}\n\nfunction handleFilterChange<T>(this: StTableDirective<T>, state: FilterConfiguration) {\n    this.filter.emit(state);\n}\n\nfunction handleSliceChange<T>(this: StTableDirective<T>, state: SliceConfiguration) {\n    this.slice.emit(state);\n}\n\nfunction handleExecChange<T>(this: StTableDirective<T>, state: WorkingIndicator) {\n    this.busy = state.working;\n    this.exec.emit(state);\n}\n\n\n@Directive({\n    selector: '[stTable]',\n    exportAs: 'stTable'\n})\nexport class StTableDirective<T> implements OnInit, OnDestroy {\n    items: DisplayedItem<T>[] = [];\n    busy = false;\n    private displayHandler: DisplayChangeCallback<T>;\n    private sortHandler: SortChangeCallback;\n    private filterHandler: FilterChangeCallback;\n    private sliceHandler: PageChangeCallback;\n    private execHandler: WorkingIndicatorChangeCallback;\n\n    @Output() display = new EventEmitter<DisplayedItem<T>[]>();\n    @Output() sort = new EventEmitter<SortConfiguration>();\n    @Output() filter = new EventEmitter<FilterConfiguration>();\n    @Output() slice = new EventEmitter<SliceConfiguration>();\n    @Output() exec = new EventEmitter<WorkingIndicator>();\n\n    constructor(private table: SmartTable<T>) {\n    }\n\n    ngOnInit() {\n        this.displayHandler = handleDisplayChange.bind(this);\n        this.sortHandler = handleSortChange.bind(this);\n        this.filterHandler = handleFilterChange.bind(this);\n        this.sliceHandler = handleSliceChange.bind(this);\n        this.execHandler = handleExecChange.bind(this);\n        this.table.onDisplayChange(this.displayHandler);\n        this.table.on(StEvents.TOGGLE_SORT, this.sortHandler);\n        this.table.on(StEvents.FILTER_CHANGED, this.filterHandler);\n        this.table.on(StEvents.PAGE_CHANGED, this.sliceHandler);\n        this.table.on(StEvents.EXEC_CHANGED, this.execHandler);\n        this.table.init();\n    }\n\n    ngOnDestroy() {\n        this.table.off(StEvents.DISPLAY_CHANGED, this.displayHandler);\n        this.table.off(StEvents.TOGGLE_SORT, this.sortHandler);\n        this.table.off(StEvents.FILTER_CHANGED, this.filterHandler);\n        this.table.off(StEvents.PAGE_CHANGED, this.sliceHandler);\n        this.table.off(StEvents.EXEC_CHANGED, this.execHandler);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {TableState as ITableState} from 'smart-table-core';\n\n@Injectable()\nexport class TableState implements ITableState {\n    filter = {};\n    search = {};\n    slice = {};\n    sort = {};\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StSortDirective} from './st-sort.directive';\nimport {StFilterDirective} from './st-filter.directive';\nimport {StSearchDirective} from './st-search.directive';\nimport {StPaginationDirective} from './st-pagination.directive';\nimport {StTableDirective} from './st-table.directive';\nimport {TableState} from './table-state';\n\n@NgModule({\n    declarations: [\n        StSortDirective,\n        StFilterDirective,\n        StSearchDirective,\n        StPaginationDirective,\n        StTableDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        StPaginationDirective,\n        StSortDirective,\n        StFilterDirective,\n        StSearchDirective,\n        StTableDirective\n    ],\n    providers: []\n})\nexport class SmartTableModule {\n    static forRoot(): ModuleWithProviders {\n        return {ngModule: SmartTableModule, providers: [TableState]};\n    }\n}\n","import {TableState} from './table-state';\nimport {SmartTable} from './smart-table.service';\nimport {\n    smartTable as stTable,\n    SmartTableEvents as StEvents,\n    SmartTableExtension,\n    SmartTable as ISmartTable\n} from 'smart-table-core';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport {ObservableInput, of as observableOf, from as observableFrom} from 'rxjs/index';\n\nexport const from = <T>(data: ObservableInput<T[]>,\n                        tableState = new TableState(),\n                        ...extensions: SmartTableExtension<T>[]): SmartTable<T> => {\n    const dataArray: T[] = [];\n    const table: ISmartTable<T> = stTable({data: dataArray, tableState}, ...extensions);\n    let source = observableFrom(data);\n    let subscription: Subscription;\n\n    return <SmartTable<T>>Object.assign(table, {\n        init() {\n            if (subscription) {\n                subscription.unsubscribe();\n            }\n            table.dispatch(StEvents.EXEC_CHANGED, {working: true});\n            subscription = source\n                .subscribe((items: T[]) => {\n                    dataArray.splice(0, dataArray.length, ...items);\n                    table.exec();\n                });\n        },\n        use(newData: T[], newTableState?: TableState) {\n            subscription.unsubscribe();\n            if (newTableState) {\n                Object.assign(tableState, newTableState);\n            }\n            source = observableOf(newData);\n            table.dispatch(StEvents.EXEC_CHANGED, {working: true});\n            subscription = source\n                .subscribe((values: T[]) => {\n                    dataArray.splice(0, dataArray.length, ...values);\n                    table.exec();\n                });\n        },\n        ngOnDestroy() {\n            subscription.unsubscribe();\n        }\n    });\n};\n\nexport const of = <T>(data: T[], tableState = new TableState(), ...extensions: SmartTableExtension<T>[]): SmartTable<T> =>\n    from(observableOf(data), tableState, ...extensions);\n"],"names":["Injectable","sort","Directive","ElementRef","Input","HostBinding","HostListener","filter","fromEvent","map","debounceTime","distinctUntilChanged","search","slice","EventEmitter","Output","NgModule","CommonModule","from","stTable","observableFrom","observableOf","of"],"mappings":"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"}