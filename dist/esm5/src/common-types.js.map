{"version":3,"file":"common-types.js","sourceRoot":"","sources":["../../src/common-types.ts"],"names":[],"mappings":";;;;;;SAIU,KAAK;UACJ,MAAM;UACN,MAAM;;;;;cAIF,UAAU;QAChB,IAAI;YACA,OAAO;gBACH,IAAI;kBACF,IAAI;yBACG,KAAK;2BACH,KAAK;YACpB,QAAQ;gBACJ,WAAW;;;;;iBAIV,aAAa;qBACT,iBAAiB;kBACpB,aAAa;kBACb,cAAc;oBACZ,gBAAgB;qBACf,iBAAiB;oBAClB,gBAAgB;gBACpB,YAAY;;;;;aAIf,SAAS;YACV,QAAQ;YACR,QAAQ;UACV,MAAM","sourcesContent":["import {TableState} from './table-state';\nimport {OnDestroy} from '@angular/core';\n\nexport const enum SortDirection {\n    ASC = 'asc',\n    DESC = 'desc',\n    NONE = 'none'\n}\n\nexport const enum FilterOperator {\n    INCLUDES = 'includes',\n    IS = 'is',\n    IS_NOT = 'isNot',\n    LOWER_THAN = 'lt',\n    GREATER_THAN = 'gt',\n    LOWER_THAN_OR_EQUAL = 'lte',\n    GREATER_THAN_OR_EQUAL = 'gte',\n    EQUALS = 'equals',\n    NOT_EQUALS = 'notEquals'\n}\n\nexport const enum StEvents {\n    TOGGLE_SORT = 'TOGGLE_SORT',\n    DISPLAY_CHANGED = 'DISPLAY_CHANGED',\n    PAGE_CHANGED = 'CHANGE_PAGE',\n    EXEC_CHANGED = 'EXEC_CHANGED',\n    FILTER_CHANGED = 'FILTER_CHANGED',\n    SUMMARY_CHANGED = 'SUMMARY_CHANGED',\n    SEARCH_CHANGED = 'SEARCH_CHANGED',\n    EXEC_ERROR = 'EXEC_ERROR',\n}\n\nexport const enum FilterType {\n    BOOLEAN = 'boolean',\n    NUMBER = 'number',\n    STRING = 'string',\n    DATE = 'date'\n}\n\nexport interface SortState {\n    pointer?: string;\n    direction?: string;\n}\n\nexport interface SliceState {\n    page?: number;\n    size?: number;\n}\n\nexport interface ExecState {\n    working: boolean;\n}\n\nexport interface SearchState {\n    value?: string;\n    scope?: string[];\n}\n\nexport interface DisplayedItem<T> {\n    value: T;\n    index: number;\n}\n\nexport interface SmartTableEventEmitter {\n    on: (event: string, ...listeners: Function[]) => SmartTableEventEmitter;\n    off: (event: string, ...listeners: Function[]) => SmartTableEventEmitter;\n    dispatch: (event: string, ...args: any[]) => SmartTableEventEmitter;\n}\n\nexport interface ProcessInput {\n    processingDelay?: number;\n}\n\nexport interface SmartTableCore<T> extends SmartTableEventEmitter {\n    sort: (newState: SortState) => void;\n    filter: (filterClause: any) => void;\n    search: (newState: SearchState) => void;\n    slice: (newState: SliceState) => void;\n    onDisplayChange: (handler: Function) => void;\n    getTableState: () => TableState;\n    getMatchingItems: () => T[];\n    eval: (state ?: TableState) => Promise<DisplayedItem<T>[]>;\n    exec: (processInput?: ProcessInput) => void;\n}\n\nexport interface NgSmartTable<T> extends OnDestroy {\n    /**\n     * Initialize table by loading or reloading data from the source defined\n     * in from() during factory initialization\n     */\n    init: () => void;\n    /**\n     * Replace the data in the table with new data\n     *\n     * @param data - The data to show in the table\n     */\n    use: (data: T[]) => void;\n}\n"]}