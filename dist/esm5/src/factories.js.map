{"version":3,"file":"factories.js","sourceRoot":"","sources":["../../src/factories.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AAEzC,OAAO,EACH,UAAU,IAAI,OAAO,EAIxB,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EAAkB,EAAE,IAAI,YAAY,EAAE,IAAI,IAAI,cAAc,EAAC,MAAM,YAAY,CAAC;AAEvF,MAAM,CAAC,qBAAM,IAAI,GAAG,UAAI,IAA0B,EAC1B,UAA6B;IAA7B,2BAAA,EAAA,iBAAiB,UAAU,EAAE;IAC7B,oBAAuC;SAAvC,UAAuC,EAAvC,qBAAuC,EAAvC,IAAuC;QAAvC,mCAAuC;;IAC3D,qBAAM,SAAS,GAAQ,EAAE,CAAC;IAC1B,qBAAM,KAAK,GAAmB,OAAO,gBAAC,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,YAAA,EAAC,SAAK,UAAU,EAAC,CAAC;IACpF,qBAAI,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IAClC,qBAAI,YAA0B,CAAC;IAE/B,MAAM,mBAAgB,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;QACvC,IAAI;;;;YACA,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACf,YAAY,CAAC,WAAW,EAAE,CAAC;aAC9B;YACD,KAAK,CAAC,QAAQ,oCAAwB,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACvD,YAAY,GAAG,MAAM;iBAChB,SAAS,CAAC,UAAC,KAAU;gBAClB,SAAS,CAAC,MAAM,OAAhB,SAAS,GAAQ,CAAC,EAAE,SAAS,CAAC,MAAM,SAAK,KAAK,GAAE;gBAChD,KAAK,CAAC,IAAI,EAAE,CAAC;aAChB,CAAC,CAAC;SACV;QACD,GAAG;;;;;kBAAC,OAAY,EAAE,aAA0B;YACxC,YAAY,CAAC,WAAW,EAAE,CAAC;YAC3B,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;aAC5C;YACD,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;YAC/B,KAAK,CAAC,QAAQ,oCAAwB,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACvD,YAAY,GAAG,MAAM;iBAChB,SAAS,CAAC,UAAC,MAAW;gBACnB,SAAS,CAAC,MAAM,OAAhB,SAAS,GAAQ,CAAC,EAAE,SAAS,CAAC,MAAM,SAAK,MAAM,GAAE;gBACjD,KAAK,CAAC,IAAI,EAAE,CAAC;aAChB,CAAC,CAAC;SACV;QACD,WAAW;;;;YACP,YAAY,CAAC,WAAW,EAAE,CAAC;SAC9B;KACJ,CAAC,EAAC;CACN,CAAC;AAEF,MAAM,CAAC,qBAAM,EAAE,GAAG,UAAI,IAAS,EAAE,UAA6B;IAA7B,2BAAA,EAAA,iBAAiB,UAAU,EAAE;IAAE,oBAAuC;SAAvC,UAAuC,EAAvC,qBAAuC,EAAvC,IAAuC;QAAvC,mCAAuC;;IACnG,OAAA,IAAI,gBAAC,YAAY,CAAC,IAAI,CAAC,EAAE,UAAU,SAAK,UAAU;AAAlD,CAAmD,CAAC","sourcesContent":["import {TableState} from './table-state';\nimport {SmartTable} from './smart-table.service';\nimport {\n    smartTable as stTable,\n    SmartTableEvents as StEvents,\n    SmartTableExtension,\n    SmartTable as ISmartTable\n} from 'smart-table-core';\nimport {Subscription} from 'rxjs/internal/Subscription';\nimport {ObservableInput, of as observableOf, from as observableFrom} from 'rxjs/index';\n\nexport const from = <T>(data: ObservableInput<T[]>,\n                        tableState = new TableState(),\n                        ...extensions: SmartTableExtension<T>[]): SmartTable<T> => {\n    const dataArray: T[] = [];\n    const table: ISmartTable<T> = stTable({data: dataArray, tableState}, ...extensions);\n    let source = observableFrom(data);\n    let subscription: Subscription;\n\n    return <SmartTable<T>>Object.assign(table, {\n        init() {\n            if (subscription) {\n                subscription.unsubscribe();\n            }\n            table.dispatch(StEvents.EXEC_CHANGED, {working: true});\n            subscription = source\n                .subscribe((items: T[]) => {\n                    dataArray.splice(0, dataArray.length, ...items);\n                    table.exec();\n                });\n        },\n        use(newData: T[], newTableState?: TableState) {\n            subscription.unsubscribe();\n            if (newTableState) {\n                Object.assign(tableState, newTableState);\n            }\n            source = observableOf(newData);\n            table.dispatch(StEvents.EXEC_CHANGED, {working: true});\n            subscription = source\n                .subscribe((values: T[]) => {\n                    dataArray.splice(0, dataArray.length, ...values);\n                    table.exec();\n                });\n        },\n        ngOnDestroy() {\n            subscription.unsubscribe();\n        }\n    });\n};\n\nexport const of = <T>(data: T[], tableState = new TableState(), ...extensions: SmartTableExtension<T>[]): SmartTable<T> =>\n    from(observableOf(data), tableState, ...extensions);\n"]}