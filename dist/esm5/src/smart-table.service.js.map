{"version":3,"file":"smart-table.service.js","sourceRoot":"","sources":["../../src/smart-table.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,UAAU,EAAY,MAAM,eAAe,CAAC;;;;;;;;;gBASnD,UAAU;;qBATX;;SAUsB,UAAU","sourcesContent":["import {Injectable, OnDestroy} from '@angular/core';\nimport {\n    SmartTable as ISmartTable, DisplayedItem, ProcessingOptions, FilterConfiguration, DisplayChangeCallback,\n    SearchConfiguration,\n    SliceConfiguration,\n    SortConfiguration,\n    TableState\n} from 'smart-table-core';\n\n@Injectable()\nexport abstract class SmartTable<T> implements ISmartTable<T>, OnDestroy {\n    dispatch: (event: string, ...args: any[]) => ISmartTable<T>;\n    eval: (state?: TableState) => Promise<DisplayedItem<T>[]>;\n    exec: (processInput?: ProcessingOptions) => void;\n    filter: (filterClause: FilterConfiguration) => void;\n    getMatchingItems: () => T[];\n    getTableState: () => TableState;\n    init: () => void;\n    off: (event: string, ...listeners: Function[]) => ISmartTable<T>;\n    on: (event: string, ...listeners: Function[]) => ISmartTable<T>;\n    onDisplayChange: (callback: DisplayChangeCallback<T>) => void;\n    search: (searchState: SearchConfiguration) => void;\n    slice: (sliceState: SliceConfiguration) => void;\n    sort: (sortState: SortConfiguration) => void;\n    use: (data: T[], newTableState ?: TableState) => void;\n    ngOnDestroy: () => void;\n    filteredCount: number;\n    length: number;\n}\n"]}